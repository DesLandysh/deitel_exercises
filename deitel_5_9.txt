Дейтелл -- глава 5 -- управжнения

/* 5.9 */
Гараж требует оплатить минимальный взнос в 3 бакса для парковки машины на время, не более 3х часов. За каждый час времени (или неполный час) сверх 3х часов гараж требует доплаты в 50 центов в час. Максимальная плата за любые 24 часа составляет 10 баксов. Предположим, что здесь нет автомобилей, запаркованный сразу на время большее 24 часов. 
  Напишите программу, которая будет вычислять и печатать плату за парковку для 3-х водителей, которые вчера завпарковали своих авто в этом гараже. Вы должны будете ввести время начала парковки для каждого заказчика. Ваша программа должна печатать результаты в аккуратном табличном формате и должна вычислять и печатать общую сумму вчерашних платежей. Программа должна использовать функцию calculateCharges для определения платы от каждого клиента. Программа должна выводить данные в следующем формате:
Car     Hours     Charge
1         1.5       2.00
2         4.0       2.50
3        24.0      10.00
TOTAL    29.5      14.50

// Алгоритм
инициализировать переменные: дабл время, дабл массив часы кол-вом водителей, дабл оплата, (глобал статик дабл всего_часов), (глобал статик дабл всего_оптата.)
    и инт кол-во водителей 

  определить глобальные переменные: 

  написать прототип функции calculateCharges, которая должна принимать часы (дабл/флоат) и возвращать расчет (дабл/флоат)
  
  написать реализацию функции calculateCharges
      если часы 24.0 то возвращаем 10.00 (баксов) - сразу выход
      если часы меньше либо равно 3 то возвращаем 2.00 (бакса) - сразу выход
      возвращаем 2бакса+(часы-3)*0.5 бакса (если 4 часа, то 2+(4-3)*0.5 = 2.5 бакса, 2 за 3 часа и полбакса за 1 час сверху)
  
  выводим на экран надпись о введении количества водителей.
  запрос на кол-во водителей.
    оформить в функцию:
  Выводим на экран надпись о введении времени для каждого водителя
    написать функцию, которая будет печатать надпить, возвращать дамбл Разницу от 24-Часы (если 0 то 24.0), а принимать Часы и номер водителя
    также плюсуем дабл всего часов.
    записываем в массив часы.
  
вывести на экран данные по столбцам через вызов функции принтф для наименования столбцов (\\t %5.1f \\t %6.2f),
  далее в цикле итерировать по водителям с печатью их номер, часов и оплаты (стоит ли это делать функцией здесь и суммировать переменные всего_ххх? тогда нам нужно будет в цикле перезаписывать переменную оплата... и после принта ее прибавлять к общей, как и часы - нет, они у нас глобальные, так что они будут обдновляться побочным эффектом).
вывести на экран всего_часов и всего_оплата


Мы можем все обрабатывать в calculateCharges: если передавать время.
  тогда из создаем локальную переменную дабл часы: 24.0 - Время. и уже Часы используем в ветвлении...
      нет, т.к. нам нужно будет возвращать и часы для каждого водителя.